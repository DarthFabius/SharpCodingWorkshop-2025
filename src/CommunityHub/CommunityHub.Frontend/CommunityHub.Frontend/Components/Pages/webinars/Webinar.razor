@page "/webinars"
@using CommunityHub.Application.DTOs
@inject HttpClient Http
@inject NavigationManager Navigation

<h3>Webinars</h3>

@if (isLoading)
{
    <p>Loading...</p>
}
else
{
    <ul>
        @foreach (var webinar in webinars)
        {
            <li>
                <NavLink href="@GetWebinarUrl(webinar.Id)">@webinar.Title</NavLink>
            </li>
        }
    </ul>
    <button class="btn btn-primary" @onclick="NavigateToCreate">Create New Webinar</button>
}

@code {
    private List<WebinarDto> webinars = new List<WebinarDto>();
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadWebinars();
    }

    private async Task LoadWebinars()
    {
        try
        {
            var response = await Http.GetFromJsonAsync<List<WebinarDto>>("api/webinar");
            webinars = response ?? new List<WebinarDto>();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }

    private void NavigateToCreate()
    {
        Navigation.NavigateTo("/createwebinar");
    }

    private string GetWebinarUrl(Guid webinarId)
    {
        return $"/webinar/{webinarId}";
    }
}